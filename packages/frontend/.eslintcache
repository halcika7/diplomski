[{"/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/components/UI/Carousel/index.tsx":"1","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/index.tsx":"2","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/routes/index.tsx":"3","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/redux/actions/user.ts":"4","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/Login/index.tsx":"5","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/Orders/index.tsx":"6","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/Profile/index.tsx":"7","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/Dashboard/Dashboard.tsx":"8","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/Order/index.tsx":"9","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/Pricing/index.tsx":"10","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/AdminPricing/Papers.tsx":"11","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/AdminPricing/AddBinding.tsx":"12","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/AdminPricing/Bindings.tsx":"13","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/EditUser/index.tsx":"14","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/AddOrder/index.tsx":"15","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/Files/index.tsx":"16","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/Users/index.tsx":"17","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/AddUser/index.tsx":"18","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/AdminPricing/AddPaper.tsx":"19","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/components/DataTables/User.tsx":"20","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/Dashboard/Admin.tsx":"21","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/Profile/Form.tsx":"22","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/Profile/Photo.tsx":"23","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/Dashboard/Professors.tsx":"24","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/components/UI/Buttons/index.tsx":"25","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/Dashboard/Graphs.tsx":"26","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/Dashboard/Administration.tsx":"27","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/Dashboard/OrderGraphByMonths.tsx":"28","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/Dashboard/GraphByMonths.tsx":"29","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/Dashboard/GraphByMonth.tsx":"30"},{"size":1342,"mtime":1608423788871,"results":"31","hashOfConfig":"32"},{"size":1013,"mtime":1608423777613,"results":"33","hashOfConfig":"32"},{"size":3229,"mtime":1608423777614,"results":"34","hashOfConfig":"32"},{"size":4734,"mtime":1608423777614,"results":"35","hashOfConfig":"32"},{"size":1782,"mtime":1608423777608,"results":"36","hashOfConfig":"32"},{"size":2381,"mtime":1608423777609,"results":"37","hashOfConfig":"32"},{"size":2808,"mtime":1608423777612,"results":"38","hashOfConfig":"32"},{"size":1366,"mtime":1608423777604,"results":"39","hashOfConfig":"32"},{"size":5179,"mtime":1608423777609,"results":"40","hashOfConfig":"32"},{"size":7397,"mtime":1608423777610,"results":"41","hashOfConfig":"32"},{"size":1323,"mtime":1608423777602,"results":"42","hashOfConfig":"32"},{"size":4442,"mtime":1608423777600,"results":"43","hashOfConfig":"32"},{"size":1259,"mtime":1608423777601,"results":"44","hashOfConfig":"32"},{"size":5859,"mtime":1608423777607,"results":"45","hashOfConfig":"32"},{"size":8649,"mtime":1608423777599,"results":"46","hashOfConfig":"32"},{"size":1327,"mtime":1608423777608,"results":"47","hashOfConfig":"32"},{"size":2133,"mtime":1608423777613,"results":"48","hashOfConfig":"32"},{"size":3619,"mtime":1608423777600,"results":"49","hashOfConfig":"32"},{"size":5538,"mtime":1608423777601,"results":"50","hashOfConfig":"32"},{"size":3848,"mtime":1608423777598,"results":"51","hashOfConfig":"32"},{"size":2656,"mtime":1608423777603,"results":"52","hashOfConfig":"32"},{"size":4720,"mtime":1608423777611,"results":"53","hashOfConfig":"32"},{"size":1840,"mtime":1608423777611,"results":"54","hashOfConfig":"32"},{"size":1554,"mtime":1608423777606,"results":"55","hashOfConfig":"32"},{"size":696,"mtime":1608423777598,"results":"56","hashOfConfig":"32"},{"size":2640,"mtime":1608423777605,"results":"57","hashOfConfig":"32"},{"size":1567,"mtime":1608423777603,"results":"58","hashOfConfig":"32"},{"size":2802,"mtime":1608423777606,"results":"59","hashOfConfig":"32"},{"size":2865,"mtime":1608423777605,"results":"60","hashOfConfig":"32"},{"size":3258,"mtime":1608423777604,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jmctwa",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"68"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"74","messages":"75","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":2,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":8,"warningCount":0,"fixableErrorCount":4,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":28,"warningCount":0,"fixableErrorCount":17,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":7,"warningCount":0,"fixableErrorCount":4,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":3,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":3,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/components/UI/Carousel/index.tsx",[],"/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/index.tsx",[],"/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/routes/index.tsx",[],["140","141","142","143","144","145","146","147"],"/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/redux/actions/user.ts",["148"],"import {\n  User,\n  UserActions,\n  UserActionTypes,\n  UserData,\n  UserToEdit,\n} from '../types/user';\nimport { axios } from '@axios';\nimport { AppThunkDispatch } from '../AppThunkDispatch';\nimport {\n  InitialProfileErrors,\n  ProfileErrors,\n  AddUserErrors,\n} from '../reducers/user';\nimport { UserRole } from '@job/common';\n\nexport const setUserData = (userData: UserData): UserActionTypes => ({\n  type: UserActions.SET_USER_DATA,\n  payload: { data: userData },\n});\n\nconst setUserPhoto = (\n  url: string,\n  message: string,\n  status: number\n): UserActionTypes => ({\n  type: UserActions.SET_USER_PHOTO,\n  payload: { url, message, status },\n});\n\nconst setUploadError = (message: string, status: number): UserActionTypes => ({\n  type: UserActions.SET_UPLOAD_ERROR,\n  payload: { message, status },\n});\n\nexport const getUserData = async (dispatch: AppThunkDispatch) => {\n  const { data } = await axios.get<{\n    userData: UserData;\n  }>('/user/');\n  dispatch(setUserData(data.userData));\n};\n\nexport const updateProfilePicture = (formData: FormData) => async (\n  dispatch: AppThunkDispatch\n) => {\n  const { data } = await axios.post<{\n    url?: string;\n    error?: string;\n  }>('/user/picture', formData, {\n    headers: { 'content-type': 'multipart/form-data' },\n  });\n\n  if (data.error) {\n    dispatch(setUploadError(data.error, 400));\n  }\n\n  if (data.url) {\n    dispatch(setUserPhoto(data.url, 'Profile image successfully updated', 200));\n  }\n};\n\nexport const setUserResponse = (\n  message: string,\n  status: number | null\n): UserActionTypes => ({\n  type: UserActions.SET_USER_RESPONSE,\n  payload: { message, status },\n});\n\nexport const restUserResponse = (dispatch: AppThunkDispatch) =>\n  dispatch(setUserResponse('', null));\n\nconst setProfileErrors = (\n  payload: Partial<ProfileErrors>\n): UserActionTypes => ({\n  type: UserActions.SET_PROFILE_ERRORS,\n  payload,\n});\n\nexport const resetProfileErrors = (dispatch: AppThunkDispatch) =>\n  dispatch(setProfileErrors(InitialProfileErrors));\n\nexport const updateInfo = (info: Partial<ProfileErrors>) => async (\n  dispatch: AppThunkDispatch\n) => {\n  const { data, status } = await axios.patch<{\n    errors?: Partial<ProfileErrors>;\n    message?: string;\n  }>('/user/', info);\n\n  dispatch(setUserResponse(data.message || '', status));\n\n  if (data.errors) {\n    dispatch(setProfileErrors(data.errors));\n  }\n\n  if (status === 200) {\n    dispatch({\n      type: UserActions.UPDATE_USER_DATA,\n      payload: info,\n    });\n  }\n};\n\nexport const setUsers = (users: User[] | null): UserActionTypes => ({\n  type: UserActions.SET_USERS,\n  payload: users,\n});\n\nexport const getUsers = (role: UserRole | 'all') => async (\n  dispatch: AppThunkDispatch\n) => {\n  const { data } = await axios.get<{\n    users: User[];\n  }>(`/user/${role}`);\n  dispatch(setUsers(data.users));\n};\n\nexport const setUserToEdit = (user: UserToEdit | null): UserActionTypes => ({\n  type: UserActions.SET_USER_TO_EDIT,\n  payload: user,\n});\n\nexport const getUserToEdit = (id: string) => async (\n  dispatch: AppThunkDispatch\n) => {\n  const { data, status } = await axios.get<{\n    user: UserToEdit;\n    message: string;\n  }>(`/user/edit/${id}`);\n\n  if (status !== 200) {\n    return dispatch(setUserResponse(data.message, status));\n  }\n\n  return dispatch(setUserToEdit(data.user));\n};\n\nexport const changeUserRole = (role: UserRole, id: string) => async (\n  dispatch: AppThunkDispatch\n) => {\n  const { data, status } = await axios.patch<{\n    message: string;\n  }>(`/user/${role}/${id}`);\n\n  dispatch(setUserResponse(data.message, status));\n\n  if (status === 200) {\n    dispatch({\n      type: UserActions.SET_USER_ROLE,\n      payload: role,\n    });\n  }\n};\n\nexport const changeUserBlockStatus = (blocked: boolean, id: string) => async (\n  dispatch: AppThunkDispatch\n) => {\n  const { data, status } = await axios.patch<{\n    message: string;\n  }>(`/user/status/${blocked}/${id}`);\n\n  dispatch(setUserResponse(data.message, status));\n\n  if (status === 200) {\n    dispatch({\n      type: UserActions.SET_USER_BLOCKED_STATUS,\n      payload: { blocked, id },\n    });\n  }\n};\n\nconst setAddUserErrors = (payload: AddUserErrors): UserActionTypes => ({\n  type: UserActions.SET_ADD_USER_ERRORS,\n  payload,\n});\n\nexport const resetAddUserErrors = (dispatch: AppThunkDispatch) =>\n  dispatch(setAddUserErrors({ email: '' }));\n\nexport const addUser = (postData: { role: UserRole; email: string }) => async (\n  dispatch: AppThunkDispatch\n) => {\n  const { data, status } = await axios.post<{\n    message: string;\n    errors?: AddUserErrors;\n  }>('/user/add', postData);\n\n  dispatch(setUserResponse(data.message, status));\n\n  if (status === 200) {\n    dispatch(resetAddUserErrors);\n  }\n\n  if (data.errors) {\n    dispatch(setAddUserErrors(data.errors));\n  }\n};\n","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/Login/index.tsx",[],"/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/Orders/index.tsx",["149"],"import React, { FC, useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport {\n  getOrders,\n  setOrders,\n  updateOrderStatus,\n  setOrderMessage,\n} from '@actions';\nimport { useThunkDispatch } from '@dispatch';\nimport Order from '@components/DataTables/Order';\nimport { createSelector } from 'reselect';\nimport { AppState } from '@reducers';\nimport { useSelector } from 'react-redux';\nimport Spinner from '@components/UI/Spinner/Spinner';\nimport Alert from '@components/UI/Alert';\nimport { AnyDictionary, OrderType, UserRole } from '@job/common';\n\nconst redux = createSelector(\n  (state: AppState) => state.order.orders,\n  (state: AppState) => state.order.message,\n  (state: AppState) => state.order.status,\n  (state: AppState) => state.order.isChangingStatus,\n  (orders, message, status, isChanging) => ({\n    orders,\n    message,\n    status,\n    isChanging,\n  })\n);\n\ninterface Props extends AnyDictionary {\n  orderType?: OrderType;\n  role?: string;\n}\n\nconst OrdersDataTable: FC<Props> = ({ orderType, role }) => {\n  const dispatch = useThunkDispatch();\n  const { orders, message, status, isChanging } = useSelector(redux);\n\n  const updateStatus = (type: OrderType, id: string) => () => {\n    if (isChanging) return;\n\n    dispatch(updateOrderStatus(type, id));\n  };\n\n  const resetResponse = () => dispatch(setOrderMessage('', null));\n\n  useEffect(() => {\n    if (orderType) {\n      dispatch(getOrders(orderType));\n    }\n  }, [dispatch, orderType]);\n\n  useEffect(() => {\n    return () => {\n      dispatch(setOrders(null));\n      dispatch(setOrderMessage('', null));\n    };\n  }, [dispatch]);\n\n  if (!orders)\n    return (\n      <div className=\"card-body\">\n        <Spinner />\n      </div>\n    );\n\n  return (\n    <>\n      <Helmet>\n        <title>Orders Table</title>\n        <meta\n          name=\"description\"\n          content=\"Orders Table page in Print shop app\"\n        />\n        <meta\n          property=\"og:description\"\n          content=\"Orders Table page in Print shop app\"\n        />\n      </Helmet>\n      {message && (\n        <Alert\n          message={message}\n          clear={resetResponse}\n          className={status === 200 ? 'alert-success' : 'alert-danger'}\n        />\n      )}\n      <Order\n        data={orders}\n        role={role as UserRole}\n        updateStatus={updateStatus}\n      />\n    </>\n  );\n};\n\nexport default React.memo(OrdersDataTable);\n","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/Profile/index.tsx",["150","151"],"import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { createSelector } from 'reselect';\nimport { AppState } from '@reducers';\nimport { useSelector } from 'react-redux';\nimport RightPart from './RightPart';\nimport { restUserResponse, resetProfileErrors } from '@actions';\nimport { useThunkDispatch } from '@dispatch';\nimport Alert from '@components/UI/Alert';\nimport PhotoUpload from './Photo';\nimport ProfileForm from './Form';\nimport DisabledInput from '@components/UI/Input/DisabledInput';\nimport { useEffect } from 'react';\n\nconst reduxProps = createSelector(\n  (state: AppState) => state.user.userData,\n  (state: AppState) => state.user.message,\n  (state: AppState) => state.user.status,\n  (...props) => props\n);\n\nconst Profile = () => {\n  const dispatch = useThunkDispatch();\n  const [user, message, status] = useSelector(reduxProps);\n\n  const resetResponse = () => dispatch(restUserResponse);\n\n  useEffect(() => {\n    return () => {\n      dispatch(restUserResponse);\n      dispatch(resetProfileErrors);\n    };\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Profile</title>\n        <meta name=\"description\" content=\"Profile page in Print shop app\" />\n        <meta\n          property=\"og:description\"\n          content=\"Profile page in Print shop app\"\n        />\n      </Helmet>\n      <div className=\"row\">\n        <div className=\"col-md-8\">\n          {message && (\n            <Alert\n              message={message}\n              clear={resetResponse}\n              className={status === 200 ? 'alert-success' : 'alert-danger'}\n            />\n          )}\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h5 className=\"title\">{user.name} Profile</h5>\n            </div>\n            <div className=\"card-body\">\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <DisabledInput\n                    label=\"Name\"\n                    name=\"Name\"\n                    classes=\"form-control\"\n                    value={user.name}\n                  />\n                </div>\n                <div className=\"col-md-6\">\n                  <DisabledInput\n                    label=\"Email Address\"\n                    name=\"Email Address\"\n                    classes=\"form-control\"\n                    value={user.email}\n                  />\n                </div>\n              </div>\n              <div className=\"row mt-3\">\n                <ProfileForm />\n                <PhotoUpload />\n              </div>\n            </div>\n          </div>\n        </div>\n        <RightPart\n          image={user.picture}\n          name={user.name}\n          fLink={user.facebookLink}\n          tLink={user.twitterLink}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default React.memo(Profile);\n","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/Dashboard/Dashboard.tsx",[],"/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/Order/index.tsx",["152","153","154","155","156","157","158","159"],"import React, { useEffect, FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\n\nimport Spinner from '@components/UI/Spinner/Spinner';\nimport FilesTable from '@components/UI/FilesTable';\nimport Alert from '@components/UI/Alert';\nimport {\n  getOrder,\n  setOrder,\n  setOrderMessage,\n  updateOrderStatus,\n} from '@actions';\nimport { useThunkDispatch } from '@dispatch';\nimport { createSelector } from 'reselect';\nimport { AppState } from '@reducers';\nimport { useSelector } from 'react-redux';\nimport { AnyDictionary, OrderType } from '@job/common';\n\nconst redux = createSelector(\n  (state: AppState) => state.order.order,\n  (state: AppState) => state.order.message,\n  (state: AppState) => state.order.status,\n  (state: AppState) => state.order.isChangingStatus,\n  (order, message, status, isChanging) => ({\n    order,\n    message,\n    status,\n    isChanging,\n  })\n);\n\ninterface Props extends AnyDictionary {\n  role?: string;\n}\n\nconst HelmetElement = () => (\n  <Helmet>\n    <title>Order</title>\n    <meta name=\"description\" content=\"Order page in Print shop app\" />\n    <meta property=\"og:description\" content=\"Order page in Print shop app\" />\n  </Helmet>\n);\n\nconst Order: FC<Props> = ({ role }) => {\n  const dispatch = useThunkDispatch();\n  const { order, message, isChanging, status } = useSelector(redux);\n  const { id } = useParams<{ id: string }>();\n\n  const updateStatus = (type: OrderType, id: string) => () => {\n    if (isChanging) return;\n\n    dispatch(updateOrderStatus(type, id));\n  };\n\n  const resetResponse = () => dispatch(setOrderMessage('', null));\n\n  useEffect(() => {\n    return () => {\n      dispatch(setOrder(null));\n      dispatch(setOrderMessage('', null));\n    };\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(getOrder(id));\n  }, [dispatch, id]);\n\n  if (!order) {\n    return (\n      <div className=\"row\">\n        <HelmetElement />\n        <div className=\"col-12\">\n          <div className=\"card min-height-75vh\">\n            <div className=\"card-body\">\n              {!message && <Spinner />}\n              {message && <p>{message}</p>}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <HelmetElement />\n      {message && (\n        <Alert\n          message={message}\n          clear={resetResponse}\n          className={status === 200 ? 'alert-success' : 'alert-danger'}\n        />\n      )}\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h5 className=\"title\">Order ID - {id}</h5>\n            </div>\n            <div className=\"card-body\">\n              <div className=\"row\">\n                <div className=\"col-12 mb-5\">\n                  <p>\n                    Ordered by{' '}\n                    {typeof order.orderedBy !== 'string'\n                      ? order.orderedBy.name\n                      : 'Someone'}\n                    , {new Date(order.createdAt).toLocaleString()}\n                  </p>\n                  <p>Ordered for {order.orderedFor} use</p>\n                  <p style={{ textTransform: 'capitalize' }}>\n                    Status - {order.status}\n                  </p>\n                </div>\n                <div className=\"col-12\">\n                  {role === 'worker' && order.status === 'approved' && (\n                    <button\n                      className=\"btn btn-sm btn-info\"\n                      onClick={updateStatus('finished', id)}\n                    >\n                      <i className=\"fas fa-check\"></i>\n                      Finish Order\n                    </button>\n                  )}\n                  {role === 'worker' && order.status === 'finished' && (\n                    <button\n                      className=\"btn btn-sm btn-success\"\n                      onClick={updateStatus('completed', id)}\n                    >\n                      <i className=\"fas fa-money-bill-alt\"></i>\n                      Confirm that order was paid\n                    </button>\n                  )}\n                  {role === 'administration' && order.status === 'pending' && (\n                    <button\n                      className=\"btn btn-sm btn-primary\"\n                      onClick={updateStatus('approved', id)}\n                    >\n                      <i className=\"fas fa-check\"></i>\n                      Approve Order\n                    </button>\n                  )}\n                  {((role === 'administration' && order.status === 'pending') ||\n                    (role === 'worker' && order.status === 'approved')) && (\n                    <button\n                      className=\"btn btn-sm btn-danger\"\n                      onClick={updateStatus('rejected', id)}\n                    >\n                      <i className=\"far fa-times-circle\"></i>\n                      Reject Order\n                    </button>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <FilesTable documents={order.documents} totalPrice={order.totalCost} />\n      </div>\n    </>\n  );\n};\n\nexport default React.memo(Order);\n","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/Pricing/index.tsx",["160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187"],"import React, { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport classes from './index.module.css';\nimport Spinner from '@components/UI/Spinner/Spinner';\nimport { getPaperBindings } from '@actions';\nimport { createSelector } from 'reselect';\nimport { AppState } from '@reducers';\nimport { useSelector } from 'react-redux';\nimport { useThunkDispatch } from '@dispatch';\n\nconst reduxProps = createSelector(\n  (state: AppState) => state.paperBinding.papers,\n  (state: AppState) => state.paperBinding.bindings,\n  (papers, bindings) => ({ papers, bindings })\n);\n\nconst Pricing = () => {\n  const dispatch = useThunkDispatch();\n  const { papers, bindings } = useSelector(reduxProps);\n\n  useEffect(() => {\n    dispatch(getPaperBindings);\n  }, [dispatch]);\n\n  return (\n    <div className=\"card\" style={{ minHeight: '80vh', paddingBottom: '3rem' }}>\n      <Helmet>\n        <title>Pricing</title>\n        <meta name=\"description\" content=\"Pricing page in Print shop app\" />\n        <meta\n          property=\"og:description\"\n          content=\"Pricing page in Print shop app\"\n        />\n      </Helmet>\n      {papers.length > 0 && bindings.length > 0 ? (\n        <div className=\"card-body\">\n          <div className=\"col-12 mb-5\">\n            <h3 className=\"col-12 card-title mb-4 text-center d-inline-block\">\n              DOCUMENT PRODUCTION\n            </h3>\n            <h4\n              style={{\n                color: '#2aabe4',\n                fontWeight: 'bold',\n                fontSize: '1.7em',\n                fontFamily: 'hcondensed',\n              }}\n            >\n              BLACK & WHITE PRINTING / COPYING\n            </h4>\n            <div className=\"d-flex\">\n              <ul className={classes.price_ul}>\n                <li>1 - 250</li>\n                <li>250 - 500</li>\n                <li>500 - 1000</li>\n                <li>1000+</li>\n              </ul>\n              <div className=\"table-responsive\">\n                <table className={classes.table + ' mt-3'}>\n                  <tbody>\n                    <tr>\n                      {papers.map((paper, i: number) => (\n                        <td key={paper.name + i}>Per copy {paper.name}</td>\n                      ))}\n                    </tr>\n                    <tr>\n                      {papers.map((paper, i: number) => (\n                        <td key={'priceblackwhite0' + i}>\n                          {paper.blackWhitePrinting.upTo250} KM\n                        </td>\n                      ))}\n                    </tr>\n                    <tr>\n                      {papers.map((paper, i: number) => (\n                        <td key={'priceblackwhite1' + i}>\n                          {paper.blackWhitePrinting.from250upTo500} KM\n                        </td>\n                      ))}\n                    </tr>\n                    <tr>\n                      {papers.map((paper, i: number) => (\n                        <td key={'priceblackwhite2' + i}>\n                          {paper.blackWhitePrinting.from500upTo1000} KM\n                        </td>\n                      ))}\n                    </tr>\n                    <tr>\n                      {papers.map((paper, i: number) => (\n                        <td key={'priceblackwhite3' + i}>\n                          {paper.blackWhitePrinting.from1000} KM\n                        </td>\n                      ))}\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n            <h4\n              style={{\n                color: '#2aabe4',\n                fontWeight: 'bold',\n                fontSize: '1.7em',\n                fontFamily: 'hcondensed',\n                marginTop: '2rem',\n              }}\n            >\n              COLOR PRINTING / COPYING\n            </h4>\n            <div className=\"d-flex\">\n              <ul className={classes.price_ul}>\n                <li>1 - 250</li>\n                <li>250 - 500</li>\n                <li>500 - 1000</li>\n                <li>1000+</li>\n              </ul>\n              <div className=\"table-responsive\">\n                <table className={classes.table + ' mt-3'}>\n                  <tbody>\n                    <tr>\n                      {papers.map((paper, i: number) => (\n                        <td key={paper.name + i + 'color'}>\n                          Per copy {paper.name}\n                        </td>\n                      ))}\n                    </tr>\n                    <tr>\n                      {papers.map((paper, i: number) => (\n                        <td key={'colorPrinting0' + i}>\n                          {paper.colorPrinting.upTo250} KM\n                        </td>\n                      ))}\n                    </tr>\n                    <tr>\n                      {papers.map((paper, i: number) => (\n                        <td key={'colorPrinting1' + i}>\n                          {paper.colorPrinting.from250upTo500} KM\n                        </td>\n                      ))}\n                    </tr>\n                    <tr>\n                      {papers.map((paper, i: number) => (\n                        <td key={'colorPrinting2' + i}>\n                          {paper.colorPrinting.from500upTo1000} KM\n                        </td>\n                      ))}\n                    </tr>\n                    <tr>\n                      {papers.map((paper, i: number) => (\n                        <td key={'colorPrinting3' + i}>\n                          {paper.colorPrinting.from1000} KM\n                        </td>\n                      ))}\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-12\">\n            <h3 className=\"col-12 card-title mb-4 text-center d-inline-block\">\n              DOCUMENT BINDING\n            </h3>\n            {bindings.map((binding, i: number) => (\n              <React.Fragment key={'heading' + i}>\n                <h4\n                  style={{\n                    color: '#2aabe4',\n                    fontWeight: 'bold',\n                    fontSize: '1.7em',\n                    fontFamily: 'hcondensed',\n                  }}\n                >\n                  {binding.name} Binding\n                </h4>\n                <table className={classes.table + ' mt-3 mb-3'}>\n                  <tbody>\n                    <tr>\n                      <td />\n                      <td>Per Document</td>\n                    </tr>\n                    <tr>\n                      <td>1 - 25 pages</td>\n                      <td>{binding['upTo25']} KM</td>\n                    </tr>\n                    <tr>\n                      <td>25 - 50 pages</td>\n                      <td>{binding['from25upTo50']} KM</td>\n                    </tr>\n                    <tr>\n                      <td>50 - 100 pages</td>\n                      <td>{binding['from50upTo100']} KM</td>\n                    </tr>\n                    <tr>\n                      <td>100 - 150 pages</td>\n                      <td>{binding['from100upTo150']} KM</td>\n                    </tr>\n                  </tbody>\n                </table>\n              </React.Fragment>\n            ))}\n          </div>\n        </div>\n      ) : (\n        <div className=\"card-body\">\n          <Spinner />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default React.memo(Pricing);\n","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/AdminPricing/Papers.tsx",[],"/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/AdminPricing/AddBinding.tsx",[],"/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/AdminPricing/Bindings.tsx",[],"/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/EditUser/index.tsx",["188","189","190","191","192","193","194"],"import React, { useEffect, FC, ChangeEvent } from 'react';\nimport { Helmet } from 'react-helmet';\nimport DisabledInput from '@components/UI/Input/DisabledInput';\nimport ToggleSwitchButton from '@components/UI/Buttons';\nimport Spinner from '@components/UI/Spinner/Spinner';\nimport Select from '@components/UI/Select';\nimport { useParams } from 'react-router';\nimport {\n  getUserToEdit,\n  setUserToEdit,\n  restUserResponse,\n  changeUserRole,\n  changeUserBlockStatus,\n} from '@actions';\nimport { createSelector } from 'reselect';\nimport { AppState } from '@reducers';\nimport { useSelector } from 'react-redux';\nimport { useThunkDispatch } from '@dispatch';\nimport { inputs } from './disabledInputs';\nimport { useState } from 'react';\nimport Alert from '@components/UI/Alert';\nimport { AnyDictionary, UserRole } from '@job/common';\n\nconst redux = createSelector(\n  (state: AppState) => state.user.userToEdit,\n  (state: AppState) => state.user.message,\n  (state: AppState) => state.user.status,\n  (user, message, status) => ({ user, message, status })\n);\n\ninterface Props extends AnyDictionary {\n  role?: string;\n}\n\nconst EditUser: FC<Props> = ({ role }) => {\n  const { id } = useParams<{ id: string }>();\n  const { user, message, status } = useSelector(redux);\n  const dispatch = useThunkDispatch();\n  const [newRole, setRole] = useState<string>('');\n  const [blocked, setBlocked] = useState<boolean>(false);\n\n  const clearResponse = () => dispatch(restUserResponse);\n\n  const isDisabled = () => !!user && newRole === user.role;\n\n  const onSubmit = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault();\n    if (isDisabled()) return;\n\n    dispatch(changeUserRole(newRole as UserRole, id));\n  };\n\n  const onChangeBlockStatus = (e: ChangeEvent<HTMLInputElement>) => {\n    const newVal = e.target.checked;\n    if (newVal === user?.blocked) return;\n    setBlocked(prev => !prev);\n    dispatch(changeUserBlockStatus(newVal, user!._id));\n  };\n\n  useEffect(() => {\n    dispatch(getUserToEdit(id));\n  }, [dispatch, id]);\n\n  useEffect(() => {\n    return () => {\n      dispatch(setUserToEdit(null));\n      dispatch(restUserResponse);\n    };\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (user) {\n      setRole(user.role);\n      setBlocked(user.blocked);\n    }\n  }, [user]);\n\n  if (!user)\n    return (\n      <div className=\"card min-height-75vh\">\n        <div className=\"card-body\">\n          {!message && <Spinner />}\n          {message && <p>{message}</p>}\n        </div>\n      </div>\n    );\n\n  return (\n    <>\n      <Helmet>\n        <title>Edit User</title>\n        <meta name=\"description\" content=\"Edit User page in Print shop app\" />\n        <meta\n          property=\"og:description\"\n          content=\"Edit User page in Print shop app\"\n        />\n      </Helmet>\n      <div className=\"card min-height-75vh\">\n        <div className=\"card-header\">\n          <h5 className=\"title\">{user.name} Profile</h5>\n          <div className=\"row mt-4\">\n            <div className=\"col\">\n              <img src={user.picture} alt={user.name} />\n            </div>\n          </div>\n        </div>\n        <div className=\"card-body\">\n          {message && (\n            <Alert\n              message={message}\n              clear={clearResponse}\n              className={status === 200 ? 'alert-success' : 'alert-danger'}\n            />\n          )}\n          <div className=\"row mt-4\">\n            {inputs.map(({ className, label, name }) => (\n              <div className={className} key={name}>\n                <DisabledInput\n                  label={label}\n                  name={name}\n                  classes=\"form-control\"\n                  value={user[name]}\n                />\n              </div>\n            ))}\n            <div className=\"col-md-4 mb-2\">\n              <label>Facebook Link</label>\n              {user.facebookLink ? (\n                <a\n                  href={user.facebookLink}\n                  className=\"form-control\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {user.facebookLink}\n                </a>\n              ) : (\n                <span className=\"form-control\">No Facebook Link</span>\n              )}\n            </div>\n            <div className=\"col-md-4 mb-4\">\n              <label>Twitter Link</label>\n              {user.twitterLink ? (\n                <a\n                  href={user.twitterLink}\n                  className=\"form-control\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {user.twitterLink}\n                </a>\n              ) : (\n                <span className=\"form-control\">No Twitter Link</span>\n              )}\n            </div>\n          </div>\n          <div className=\"row mt-4\">\n            <div className=\"col-md-6\">\n              <Select\n                value={newRole}\n                change={setRole}\n                label=\"Select User Role\"\n                option={'roles'}\n                disabled={role !== 'admin'}\n              />\n            </div>\n            <div className=\"col-md-6\">\n              <ToggleSwitchButton\n                value={!!blocked}\n                setValue={onChangeBlockStatus}\n                name=\"Disable User\"\n                disabled={role === 'admin' ? false : true}\n              />\n            </div>\n            {role === 'admin' && (\n              <div className=\"col-12\">\n                <button\n                  type=\"button\"\n                  className=\"btn-fill btn btn-primary d-block mt-4 mb-5\"\n                  onClick={onSubmit}\n                  disabled={isDisabled()}\n                >\n                  Update User Role\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default React.memo(EditUser);\n","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/AddOrder/index.tsx",["195","196"],"import React, { useState, useEffect, ChangeEvent, useCallback } from 'react';\nimport { Helmet } from 'react-helmet';\nimport Select from '@components/UI/Select';\nimport InputWithLabel from '@components/UI/Input/InputWithLabel';\nimport UploadFile from '@components/UI/Input/UploadFile';\nimport { useThunkDispatch } from '@dispatch';\nimport {\n  uploadFile as uploadFileAction,\n  getPapersBindings,\n  getCart,\n  clearCart,\n  removeDocument,\n  postOrder,\n  resetUploadStatus,\n  setOrderMessage,\n} from '@actions';\nimport { createSelector } from 'reselect';\nimport { AppState } from '@reducers';\nimport { useSelector } from 'react-redux';\nimport FilesTable from '@components/UI/FilesTable';\nimport { PostOrderErrors } from '@reducers/order';\nimport { UploadFileErrors } from '@reducers/upload';\nimport Alert from '@components/UI/Alert';\n\nconst reduxProps = createSelector(\n  (state: AppState) => state.upload,\n  (state: AppState) => state.cart.documents,\n  (state: AppState) => state.cart.totalCost,\n  (state: AppState) => state.order.message,\n  (state: AppState) => state.order.status,\n  (state: AppState) => state.order.errors,\n  (...props) => props\n);\n\nconst validPrintOptions = ['Color', 'Black/White'];\nconst validUseFor = ['Personal', 'University'];\n\nconst AddOrder = () => {\n  const dispatch = useThunkDispatch();\n  const [\n    upload,\n    documents,\n    totalCost,\n    message,\n    status,\n    orderErrors,\n  ] = useSelector(reduxProps);\n  const [file, setFile] = useState<File>();\n  const [numberOfCopies, setNumberOfCopies] = useState<number>(1);\n  const [printOption, setPrintOption] = useState<string>('');\n  const [paperOption, setPaperOption] = useState<string>('');\n  const [bindingOption, setBindingOption] = useState<string>('');\n  const [useFor, setUseFor] = useState<string>('Personal');\n  const [errors, setErrors] = useState<PostOrderErrors & UploadFileErrors>({\n    ...orderErrors,\n    ...upload.errors,\n  });\n  const [uploading, setUploading] = useState<boolean>(false);\n  const [sending, setSending] = useState<boolean>(false);\n\n  const isDisabled = () => {\n    if (\n      !numberOfCopies ||\n      Number.isNaN(numberOfCopies) ||\n      !validPrintOptions.includes(printOption) ||\n      !upload.papers.includes(paperOption) ||\n      !upload.bindings.includes(bindingOption) ||\n      !file ||\n      uploading\n    ) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const isSubmitDisabled = () =>\n    documents.length < 1 || !validUseFor.includes(useFor) || sending;\n\n  const uploadFile = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault();\n\n    if (isDisabled()) return;\n\n    setUploading(prev => !prev);\n\n    const data = new FormData();\n    data.append('print', printOption);\n    data.append('paper', paperOption);\n    data.append('copies', numberOfCopies.toString());\n    data.append('binding', bindingOption);\n    data.append('file', file as Blob);\n    dispatch(uploadFileAction(data));\n  };\n\n  const changeNumberOfCopies = (e: ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n\n    if (!Number.isNaN(value) && parseInt(value) > 0 && value) {\n      setNumberOfCopies(parseInt(value, 10));\n    }\n  };\n\n  const deleteFiles = () => dispatch(clearCart);\n\n  const deleteFile = (id: string) => dispatch(removeDocument(id));\n\n  const clearUploadStatus = () => dispatch(resetUploadStatus);\n\n  const clearOrderStatus = () => dispatch(setOrderMessage('', null));\n\n  const addOrder = () => {\n    if (isSubmitDisabled()) return;\n    clearUploadStatus();\n    setSending(true);\n    dispatch(postOrder(useFor));\n  };\n\n  const resetAfterUpload = useCallback(() => {\n    setUploading(false);\n    setFile(undefined);\n    setNumberOfCopies(1);\n    setPrintOption('');\n    setPaperOption('');\n    setBindingOption('');\n  }, []);\n\n  useEffect(() => {\n    dispatch(getPapersBindings);\n    dispatch(getCart);\n  }, [dispatch]);\n\n  useEffect(() => {\n    setErrors(prev => ({\n      ...prev,\n      ...orderErrors,\n      ...upload.errors,\n    }));\n  }, [orderErrors, upload.errors]);\n\n  useEffect(() => {\n    if (upload.status === 200) {\n      resetAfterUpload();\n    }\n\n    if (upload.status === 400) {\n      setUploading(false);\n    }\n  }, [upload.status, resetAfterUpload]);\n\n  useEffect(() => {\n    if (status) {\n      resetAfterUpload();\n      setSending(false);\n      setUseFor('Personal');\n    }\n  }, [status, resetAfterUpload]);\n\n  useEffect(() => {\n    return () => {\n      dispatch(setOrderMessage('', null));\n      dispatch(resetUploadStatus);\n    };\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Add Order</title>\n        <meta\n          name=\"description\"\n          content=\"Add Order page in Print Shop Web App\"\n        />\n        <meta\n          property=\"og:description\"\n          content=\"Add Order page in Print Shop Web App\"\n        />\n      </Helmet>\n      {upload.message && (\n        <Alert\n          message={upload.message}\n          clear={clearUploadStatus}\n          className={upload.status === 200 ? 'alert-success' : 'alert-danger'}\n        />\n      )}\n      {message && (\n        <Alert\n          message={message}\n          clear={clearOrderStatus}\n          className={status === 200 ? 'alert-success' : 'alert-danger'}\n        />\n      )}\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h5 className=\"title\">Add new Order</h5>\n            </div>\n            <div className=\"card-body\">\n              <UploadFile\n                setFile={setFile}\n                file={file}\n                error={errors.file}\n                span={!!message && upload.status === 200}\n              />\n              <div className=\"row\">\n                <div className=\"col-sm-3 mb-3\">\n                  <InputWithLabel\n                    label=\"Number of Copies\"\n                    placeholder=\"Number Of Copies\"\n                    type=\"number\"\n                    classes=\"form-control\"\n                    value={numberOfCopies}\n                    onChange={changeNumberOfCopies}\n                    step=\"1\"\n                    min=\"1\"\n                    error={errors.numberOfCopies}\n                    name=\"number_of_copies\"\n                  />\n                </div>\n                <div className=\"col-sm-3 mb-3\">\n                  <Select\n                    label=\"Print Option\"\n                    option=\"print\"\n                    value={printOption}\n                    change={setPrintOption}\n                    error={errors.printOption}\n                  />\n                </div>\n                <div className=\"col-sm-3 mb-3\">\n                  <Select\n                    label=\"Paper Option\"\n                    value={paperOption}\n                    change={setPaperOption}\n                    values={upload.papers}\n                    error={errors.paperOption}\n                  />\n                </div>\n                <div className=\"col-sm-3 mb-3\">\n                  <Select\n                    label=\"Binding Option\"\n                    value={bindingOption}\n                    change={setBindingOption}\n                    values={upload.bindings}\n                    error={errors.bindingOption}\n                  />\n                </div>\n                <div className=\"col-12\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-primary\"\n                    onClick={uploadFile}\n                    disabled={isDisabled()}\n                  >\n                    Confirm File\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {documents.length > 0 && (\n          <>\n            <FilesTable\n              documents={documents}\n              totalPrice={totalCost}\n              deleteFile={deleteFile}\n              deleteFiles={deleteFiles}\n            />\n            <div className=\"col-12\">\n              <div className=\"card\">\n                <div className=\"col-12 col-sm-5 mb-4\">\n                  <Select\n                    label=\"Use for\"\n                    option=\"use\"\n                    value={useFor}\n                    change={setUseFor}\n                    error={errors.useFor}\n                  />\n                </div>\n              </div>\n              <button\n                className=\"btn btn-primary\"\n                onClick={addOrder}\n                disabled={isSubmitDisabled()}\n              >\n                Submit Order\n              </button>\n            </div>\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default React.memo(AddOrder);\n","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/Files/index.tsx",["197"],"import { useThunkDispatch } from '@dispatch';\nimport React, { useEffect } from 'react';\nimport { getFiles } from '@actions';\nimport { createSelector } from 'reselect';\nimport { AppState } from '@reducers';\nimport { useSelector } from 'react-redux';\nimport FilesTable from '@components/DataTables/File';\nimport { Helmet } from 'react-helmet';\nimport Spinner from '@components/UI/Spinner/Spinner';\n\nconst reduxProps = createSelector(\n  (state: AppState) => state.file.files,\n  files => ({ files })\n);\n\nconst Files = () => {\n  const dispatch = useThunkDispatch();\n  const { files } = useSelector(reduxProps);\n\n  useEffect(() => {\n    dispatch(getFiles);\n  }, [dispatch]);\n\n  if (!files)\n    return (\n      <div className=\"card-body\">\n        <Spinner />\n      </div>\n    );\n\n  return (\n    <>\n      <Helmet>\n        <title>Files Table</title>\n        <meta name=\"description\" content=\"Files Table page in Print shop app\" />\n        <meta\n          property=\"og:description\"\n          content=\"Files Table page in Print shop app\"\n        />\n      </Helmet>\n      <div className=\"row\">\n        <div className=\"col-12 card\">\n          <div className=\"card-header\">\n            <h2 className=\"title\">Files</h2>\n          </div>\n          <FilesTable files={files} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Files;\n","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/Users/index.tsx",["198","199","200"],"import { useThunkDispatch } from '@dispatch';\nimport { AppState } from '@reducers';\nimport React, { FC } from 'react';\nimport { useSelector } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { Helmet } from 'react-helmet';\nimport UserDataTable from '@components/DataTables/User';\nimport { getUsers, setUsers } from '@actions';\nimport { useEffect } from 'react';\nimport Spinner from '@components/UI/Spinner/Spinner';\nimport { User } from 'src/redux/types/user';\nimport { UserRole } from '@job/common';\n\ninterface Props extends Record<string, UserRole | string | undefined> {\n  usersType?: UserRole | 'all';\n  title?: string;\n}\n\nconst reduxProps = createSelector(\n  (state: AppState) => state.auth.role,\n  (state: AppState) => state.user.users,\n  (state: AppState) => state.user.loading,\n  (role, users, loading) => ({ role, users, loading })\n);\n\nconst Users: FC<Props> = ({ title, usersType = 'all' }) => {\n  const { role, users, loading } = useSelector(reduxProps);\n  const dispatch = useThunkDispatch();\n\n  useEffect(() => {\n    dispatch(getUsers(usersType));\n  }, [dispatch, usersType]);\n\n  useEffect(() => {\n    return () => {\n      dispatch(setUsers(null));\n    };\n  }, [dispatch]);\n\n  if (loading)\n    return (\n      <div className=\"row\">\n        <div className=\"col-12 card min-height-75vh \">\n          <div className=\"card-header\">\n            <h2 className=\"title\">{title}</h2>\n          </div>\n          <div className=\"card-body\">\n            <Spinner />\n          </div>\n        </div>\n      </div>\n    );\n\n  return (\n    <>\n      <Helmet>\n        <title>Users Table</title>\n        <meta name=\"description\" content=\"Users Table page in Print shop app\" />\n        <meta\n          property=\"og:description\"\n          content=\"Users Table page in Print shop app\"\n        />\n      </Helmet>\n      <div className=\"row\">\n        <div className=\"col-12 card\">\n          <div className=\"card-header\">\n            <h2 className=\"title\">{title}</h2>\n          </div>\n          <UserDataTable role={role as UserRole} users={users as User[]} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Users;\n","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/AddUser/index.tsx",["201"],"import React, { useState, ChangeEvent, useEffect } from 'react';\nimport Select from '@components/UI/Select';\nimport InputWithLabel from '@components/UI/Input/InputWithLabel';\nimport { useThunkDispatch } from '@dispatch';\nimport { addUser, resetAddUserErrors, restUserResponse } from '@actions';\nimport { Helmet } from 'react-helmet';\nimport { createSelector } from 'reselect';\nimport { AppState } from '@reducers';\nimport { useSelector } from 'react-redux';\nimport Alert from '@components/UI/Alert';\nimport { UserRole } from '@job/common';\n\nconst redux = createSelector(\n  (state: AppState) => state.user.addUserErrors,\n  (state: AppState) => state.user.message,\n  (state: AppState) => state.user.status,\n  (errors, message, status) => ({ errors, message, status })\n);\n\nconst AddUser = () => {\n  const { errors, message, status } = useSelector(redux);\n  const [role, setRole] = useState<UserRole>('professor');\n  const [email, setEmail] = useState('');\n  const [disabled, setDisabled] = useState<boolean>(false);\n  const dispatch = useThunkDispatch();\n\n  const inputChange = ({\n    target: { value },\n  }: ChangeEvent<HTMLInputElement>) => {\n    setEmail(value);\n  };\n\n  const clearMessage = () => dispatch(restUserResponse);\n\n  const add = () => {\n    if (disabled) return;\n    clearMessage();\n    setDisabled(true);\n    dispatch(addUser({ role, email }));\n  };\n\n  useEffect(() => {\n    return () => {\n      dispatch(restUserResponse);\n      dispatch(resetAddUserErrors);\n    };\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (status) {\n      setDisabled(false);\n    }\n\n    if (status === 200) {\n      setEmail('');\n      setRole('professor');\n    }\n  }, [status]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Add User</title>\n        <meta\n          name=\"description\"\n          content=\"Add User page in Print Shop Web App\"\n        />\n        <meta\n          property=\"og:description\"\n          content=\"Add User page in Print Shop Web App\"\n        />\n      </Helmet>\n      {message && (\n        <Alert\n          message={message}\n          clear={clearMessage}\n          className={status === 200 ? 'alert-success' : 'alert-danger'}\n        />\n      )}\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <div className=\"card min-height-75vh\">\n            <div className=\"card-header\">\n              <h5 className=\"title\">Add new Order</h5>\n            </div>\n            <div className=\"card-body\">\n              <div className=\"row\">\n                <div className=\"col-lg-4 mb-3\">\n                  <InputWithLabel\n                    label=\"User Email\"\n                    placeholder=\"User Email\"\n                    type=\"email\"\n                    classes=\"form-control\"\n                    value={email}\n                    onChange={inputChange}\n                    error={errors.email}\n                    name=\"email\"\n                  />\n                </div>\n                <div className=\"col-lg-4 mb-3\">\n                  <Select\n                    value={role}\n                    change={setRole}\n                    label=\"Select User Role\"\n                    option={'roles'}\n                  />\n                </div>\n                <div className=\"col-12\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-primary\"\n                    onClick={add}\n                    disabled={disabled}\n                  >\n                    Add User\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AddUser;\n","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/AdminPricing/AddPaper.tsx",[],"/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/components/DataTables/User.tsx",["202"],"import React, { FC, useEffect } from 'react';\n\n// hooks\nimport { createSelector } from 'reselect';\nimport { useThunkDispatch } from '@dispatch';\nimport { useSelector } from 'react-redux';\n\n// components\nimport { Link } from 'react-router-dom';\nimport Alert from '../UI/Alert';\nimport Table from './index';\nimport { textFilter } from 'react-bootstrap-table2-filter';\n\n// types\nimport { User } from 'src/redux/types/user';\nimport { AppState } from '@reducers/index';\n\n// actions\nimport { changeUserBlockStatus, restUserResponse } from '@actions';\nimport { UserRole } from '@job/common';\n\ninterface Props {\n  users: User[];\n  role: UserRole;\n}\n\nconst buttonFormatter = (\n  role: UserRole,\n  changeUserBlockedStatus: (data: User) => () => void\n) => (_: undefined, row: User) => (\n  <>\n    <button\n      name=\"View User\"\n      className=\"btn btn-warning\"\n      data-toggle=\"tooltip\"\n      data-placement=\"top\"\n      title={`View User - ${row.name}`}\n    >\n      <Link to={`/user/${row._id}`} style={{ color: '#fff' }}>\n        <i className=\"far fa-eye\" />\n      </Link>\n    </button>\n    {role === 'admin' && (\n      <button\n        name=\"Block User\"\n        className={`btn ${!row.blocked ? 'btn-danger' : 'btn-primary'} padding`}\n        type=\"button\"\n        data-toggle=\"tooltip\"\n        data-placement=\"top\"\n        title={`${!row.blocked ? 'Block' : 'Unblock'} User - ${row.name}`}\n        onClick={changeUserBlockedStatus(row)}\n      >\n        <i className={`fas ${!row.blocked ? 'fa-ban' : 'fa-unlock'}`} />\n      </button>\n    )}\n  </>\n);\n\nconst imgFormatter = (_: undefined, row: User) => (\n  <img src={`${row.picture}`} alt={row.name} width=\"30\" height=\"30\" />\n);\n\nconst columns = (\n  role: UserRole,\n  changeUserBlockedStatus: (data: User) => () => void\n) => [\n  {\n    dataField: 'name',\n    text: 'Name',\n    filter: textFilter(),\n    align: 'center',\n    headerAlign: 'center',\n    sort: true,\n  },\n  {\n    dataField: 'email',\n    text: 'Email',\n    filter: textFilter(),\n    align: 'center',\n    headerAlign: 'center',\n    sort: true,\n  },\n  {\n    dataField: 'role',\n    text: 'Role',\n    filter: textFilter(),\n    align: 'center',\n    headerAlign: 'center',\n    sort: true,\n  },\n  {\n    dataField: 'phone',\n    text: 'Phone Number',\n    filter: textFilter(),\n    align: 'center',\n    headerAlign: 'center',\n    sort: true,\n  },\n  {\n    dataField: 'picture',\n    formatter: imgFormatter,\n    text: 'User Picture',\n    align: 'center',\n    headerAlign: 'center',\n    sort: false,\n    csvExport: false,\n  },\n  {\n    dataField: 'actions',\n    text: 'Actions',\n    formatter:\n      role === 'admin' || role === 'worker'\n        ? buttonFormatter(role, changeUserBlockedStatus)\n        : null,\n    align: 'center',\n    headerAlign: 'center',\n    csvExport: false,\n  },\n];\n\nconst redux = createSelector(\n  (state: AppState) => state.user.message,\n  (state: AppState) => state.user.status,\n  (message, status) => ({ message, status })\n);\n\nconst UserDataTable: FC<Props> = ({ users, role }) => {\n  const dispatch = useThunkDispatch();\n  const { message, status } = useSelector(redux);\n\n  const clearResponse = () => dispatch(restUserResponse);\n\n  const changeUserBlockedStatus = (data: User) => () => {\n    dispatch(changeUserBlockStatus(!data.blocked, data._id));\n  };\n\n  useEffect(() => {\n    return () => {\n      dispatch(restUserResponse);\n    };\n  }, [dispatch]);\n\n  return (\n    <>\n      {message && (\n        <Alert\n          message={message}\n          clear={clearResponse}\n          className={status === 200 ? 'alert-success' : 'alert-danger'}\n        />\n      )}\n      <div className=\"DataTable card-body col-12\">\n        <Table\n          data={users}\n          columns={columns(role, changeUserBlockedStatus)}\n          exportCSV\n          withClear\n        />\n      </div>\n    </>\n  );\n};\n\nexport default React.memo(UserDataTable);\n","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/Dashboard/Admin.tsx",["203"],"import React from 'react';\nimport { createSelector } from 'reselect';\nimport { AppState } from '@reducers';\nimport { useSelector } from 'react-redux';\nimport {\n  earnings,\n  orders,\n  earningsMonth,\n  monthOrders,\n} from './ts-files/adminColumns';\nimport StatsSuspense from '@components/UI/Stats/StatsSuspense';\n\nconst StatsPercentageSuspense = React.lazy(\n  () => import('../../components/UI/Stats/StatsPercentageSuspense')\n);\nconst Stats = React.lazy(() => import('../../components/UI/Stats/Stats'));\nconst StatsWithPercentage = React.lazy(\n  () => import('../../components/UI/Stats/StatsWithPercentage')\n);\n\nconst redux = createSelector(\n  (state: AppState) => state.dashboard,\n  dashboard => ({ dashboard })\n);\n\nconst Admin = () => {\n  const { dashboard } = useSelector(redux);\n\n  return (\n    <div className=\"col-12\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <div className=\"card\">\n            <h2 className=\"mt-2 mb-2 ml-3\">Earnings & Debt</h2>\n          </div>\n        </div>\n        {earnings.map(row => (\n          <StatsSuspense classes=\"col-6 col-xl-3\" key={row.name}>\n            <Stats\n              value={dashboard[row.name] + ' KM'}\n              heading={row.heading}\n              icon=\"money-wave\"\n            />\n          </StatsSuspense>\n        ))}\n        {earningsMonth.map(({ name, heading, heading2 }) => (\n          <StatsPercentageSuspense key={name}>\n            <StatsWithPercentage\n              value={dashboard[name]?.thisMonthEarnings}\n              oldValue={dashboard[name]?.lastMonthEarnings}\n              heading={heading}\n              heading2={heading2}\n              icon=\"money-wave\"\n              price\n            />\n          </StatsPercentageSuspense>\n        ))}\n        <div className=\"col-12\">\n          <div className=\"card\">\n            <h2 className=\"mt-2 mb-2 ml-3\">Orders</h2>\n          </div>\n        </div>\n        {orders.map(order => (\n          <StatsSuspense classes=\"col-6 col-xl-3\" key={order.name}>\n            <Stats\n              value={dashboard[order.name]}\n              heading={order.heading}\n              icon=\"box\"\n            />\n          </StatsSuspense>\n        ))}\n        {monthOrders.map(({ name, heading, heading2, icon }) => (\n          <StatsPercentageSuspense key={name}>\n            <StatsWithPercentage\n              value={dashboard[name]?.thisMonthOrders}\n              oldValue={dashboard[name]?.lastMonthOrders}\n              heading={heading}\n              heading2={heading2}\n              icon={icon}\n            />\n          </StatsPercentageSuspense>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(Admin);\n","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/Profile/Form.tsx",["204"],"import React, { useEffect, useState, MouseEvent, ChangeEvent } from 'react';\nimport InputWithLabel from '@components/UI/Input/InputWithLabel';\nimport { createSelector } from 'reselect';\nimport { AppState } from '@reducers';\nimport { useSelector } from 'react-redux';\nimport { restUserResponse, updateInfo } from '@actions';\nimport { useThunkDispatch } from '@dispatch';\nimport { ProfileErrors } from '@reducers/user';\n\nconst reduxProps = createSelector(\n  (state: AppState) => state.user.userData,\n  (state: AppState) => state.user.profileErrors,\n  (state: AppState) => state.user.status,\n  (userData, profileErrors, status) => ({\n    userData,\n    profileErrors,\n    status,\n  })\n);\n\nconst facebookRegex = new RegExp('http(?:s)://(?:www.)facebook.com/');\nconst twitterRegex = new RegExp('http(?:s)://twitter.com/');\nconst phoneRegex = new RegExp(/^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\\\./0-9]*$/);\n\ntype Key = 'twitterLink' | 'facebookLink' | 'phone';\n\nconst ProfileForm = () => {\n  const dispatch = useThunkDispatch();\n  const { userData, profileErrors, status } = useSelector(reduxProps);\n  const [state, setState] = useState<ProfileErrors>({\n    twitterLink: '',\n    facebookLink: '',\n    phone: '',\n  });\n  const [updating, setUpdating] = useState<boolean>(false);\n  const [errors, setErrors] = useState<ProfileErrors>(profileErrors);\n\n  const isDisabled = () => {\n    const hasErrors = Object.values(errors).some(value => value !== '');\n    if (\n      (userData.facebookLink === state.facebookLink &&\n        userData.twitterLink === state.twitterLink &&\n        userData.phone === state.phone) ||\n      updating ||\n      hasErrors\n    ) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const changeInput = (e: ChangeEvent<HTMLInputElement>) => {\n    const { value, name } = e.target;\n\n    if (name === 'facebookLink') {\n      const isValid = facebookRegex.test(value);\n      setErrors(prev => ({\n        ...prev,\n        [name]: isValid ? '' : 'Facebook link is not valid.',\n      }));\n    }\n\n    if (name === 'twitterLink') {\n      const isValid = twitterRegex.test(value);\n      setErrors(prev => ({\n        ...prev,\n        [name]: isValid ? '' : 'Twitter link is not valid.',\n      }));\n    }\n\n    if (name === 'phone') {\n      const isValid = phoneRegex.test(value);\n      setErrors(prev => ({\n        ...prev,\n        [name]: isValid ? '' : 'Phone number is not valid.',\n      }));\n    }\n    setState({ ...state, [name]: value });\n  };\n\n  const resetResponse = () => dispatch(restUserResponse);\n\n  const updateProfile = (e: MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    if (isDisabled()) return;\n\n    const info = {} as Partial<ProfileErrors>;\n\n    Object.entries(state).forEach(([key, value]) => {\n      if (value && userData[key as Key] !== value) {\n        info[key as Key] = value;\n      }\n    });\n\n    if (Object.keys(info).length === 0) return;\n\n    resetResponse();\n    setUpdating(true);\n    return dispatch(updateInfo(info));\n  };\n\n  useEffect(() => {\n    if (userData.facebookLink !== undefined) {\n      setState(() => ({\n        twitterLink: userData.twitterLink,\n        facebookLink: userData.facebookLink,\n        phone: userData.phone,\n      }));\n    }\n  }, [userData]);\n\n  useEffect(() => {\n    setErrors({ ...profileErrors });\n  }, [profileErrors]);\n\n  useEffect(() => {\n    if (status) {\n      setUpdating(prev => !prev);\n    }\n  }, [status]);\n\n  return (\n    <>\n      <div className=\"col-md-4\">\n        <InputWithLabel\n          label=\"Facebook Link\"\n          placeholder=\"Facebook Link\"\n          type=\"text\"\n          classes=\"form-control\"\n          onChange={changeInput}\n          value={state.facebookLink}\n          error={errors.facebookLink}\n          name=\"facebookLink\"\n        />\n      </div>\n      <div className=\"col-md-4\">\n        <InputWithLabel\n          label=\"Twitter\"\n          placeholder=\"Twitter Link\"\n          type=\"text\"\n          classes=\"form-control\"\n          onChange={changeInput}\n          value={state.twitterLink}\n          error={errors.twitterLink}\n          name=\"twitterLink\"\n        />\n      </div>\n      <div className=\"col-md-4\">\n        <InputWithLabel\n          label=\"Phone Number\"\n          placeholder=\"Phone Number\"\n          type=\"tel\"\n          classes=\"form-control\"\n          onChange={changeInput}\n          value={state.phone}\n          error={errors.phone}\n          name=\"phone\"\n        />\n      </div>\n      <div className=\"col-12\">\n        <button\n          type=\"button\"\n          className=\"btn btn btn-primary d-block mt-4 mb-5\"\n          onClick={updateProfile}\n          disabled={isDisabled()}\n        >\n          Update Info\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default ProfileForm;\n","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/Profile/Photo.tsx",["205","206"],"import React, { useState, useEffect, MouseEvent } from 'react';\nimport UploadImage from '@components/UploadImage';\nimport { updateProfilePicture, restUserResponse } from '@actions';\nimport { useThunkDispatch } from '@dispatch';\nimport { createSelector } from 'reselect';\nimport { AppState } from '@reducers';\nimport { useSelector } from 'react-redux';\n\nconst reduxProps = createSelector(\n  (state: AppState) => state.user.message,\n  message => message\n);\n\nconst PhotoUpload = () => {\n  const dispatch = useThunkDispatch();\n  const [image, setImage] = useState<File>();\n  console.log('🚀 ~ file: Photo.tsx ~ line 17 ~ PhotoUpload ~ image', image);\n  const [updating, setUpdating] = useState<boolean>(false);\n  const message = useSelector(reduxProps);\n\n  const onFormSubmit = (e: MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    setUpdating(prev => !prev);\n    dispatch(restUserResponse);\n\n    const formData = new FormData();\n    formData.append('image', (image as unknown) as string);\n    dispatch(updateProfilePicture(formData));\n  };\n\n  useEffect(() => {\n    if (message === 'Profile image successfully updated') {\n      setImage(undefined);\n      setUpdating(prev => !prev);\n    } else if (\n      message ===\n        'File is not supported. Only JPG, PNG and GIF files are supported' ||\n      message === 'Image is required'\n    ) {\n      setUpdating(prev => !prev);\n    }\n  }, [message]);\n\n  return (\n    <div className=\"col-12\">\n      <label className=\"d-block w-100 mb-3\">Change Profile Picture</label>\n      <UploadImage setImage={setImage} image={image} />\n      <button\n        type=\"button\"\n        className=\"btn btn btn-primary d-block mt-3 mb-3\"\n        onClick={onFormSubmit}\n        disabled={updating || !image}\n      >\n        Update Picture\n      </button>\n    </div>\n  );\n};\n\nexport default PhotoUpload;\n","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/Dashboard/Professors.tsx",["207"],"import React from 'react';\nimport { createSelector } from 'reselect';\nimport { AppState } from '@reducers';\nimport { useSelector } from 'react-redux';\nimport { earnings, orders } from './ts-files/professorColumns';\nimport StatsSuspense from '@components/UI/Stats/StatsSuspense';\n\nconst Stats = React.lazy(() => import('../../components/UI/Stats/Stats'));\n\nconst redux = createSelector(\n  (state: AppState) => state.dashboard,\n  dashboard => ({ dashboard })\n);\n\nconst Professors = () => {\n  const { dashboard } = useSelector(redux);\n  return (\n    <div className=\"col-12\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <div className=\"card\">\n            <h2 className=\"mt-2 mb-2 ml-3\">Earnings & Debt</h2>\n          </div>\n        </div>\n        {earnings.map(row => (\n          <StatsSuspense classes=\"col-6 col-xl-3\" key={row.name}>\n            <Stats\n              value={dashboard[row.name] + ' KM'}\n              heading={row.heading}\n              icon=\"money-wave\"\n            />\n          </StatsSuspense>\n        ))}\n        <div className=\"col-12\">\n          <div className=\"card\">\n            <h2 className=\"mt-2 mb-2 ml-3\">Orders</h2>\n          </div>\n        </div>\n        {orders.map(order => (\n          <StatsSuspense classes=\"col-6 col-xl-3\" key={order.name}>\n            <Stats\n              value={dashboard[order.name]}\n              heading={order.heading}\n              icon=\"box\"\n            />\n          </StatsSuspense>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(Professors);\n","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/components/UI/Buttons/index.tsx",["208","209","210"],"import React, { ChangeEvent } from 'react';\n\nimport classes from './index.module.css';\n\ninterface Props {\n  name: string;\n  value: boolean;\n  setValue: (e: ChangeEvent<HTMLInputElement>) => void;\n  disabled: boolean;\n}\n\nconst ToggleSwitchButton: React.FC<Props> = ({ name, value, disabled, setValue }) => (\n  <>\n    <label className=\"d-block\">{name}</label>\n    <label className={classes.toggleCheck + ' text-white'}>\n      <input\n        className={classes.toggleCheckbox}\n        type=\"checkbox\"\n        checked={value}\n        onChange={setValue}\n        disabled={disabled}\n      />\n      <span className={classes.toggleCheckText} />\n    </label>\n  </>\n);\n\nexport default ToggleSwitchButton;\n","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/Dashboard/Graphs.tsx",[],"/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/Dashboard/Administration.tsx",["211"],"import React from 'react';\nimport { createSelector } from 'reselect';\nimport { AppState } from '@reducers';\nimport { useSelector } from 'react-redux';\nimport { earnings, orders } from './ts-files/administrationColumns';\nimport StatsSuspense from '@components/UI/Stats/StatsSuspense';\n\nconst Stats = React.lazy(() => import('../../components/UI/Stats/Stats'));\n\nconst redux = createSelector(\n  (state: AppState) => state.dashboard,\n  dashboard => ({ dashboard })\n);\n\nconst Administration = () => {\n  const { dashboard } = useSelector(redux);\n  return (\n    <div className=\"col-12\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <div className=\"card\">\n            <h2 className=\"mt-2 mb-2 ml-3\">Earnings & Debt</h2>\n          </div>\n        </div>\n        {earnings.map(row => (\n          <StatsSuspense classes=\"col-6 col-xl-3\" key={row.name}>\n            <Stats\n              value={dashboard[row.name] + ' KM'}\n              heading={row.heading}\n              icon=\"money-wave\"\n            />\n          </StatsSuspense>\n        ))}\n        <div className=\"col-12\">\n          <div className=\"card\">\n            <h2 className=\"mt-2 mb-2 ml-3\">Orders</h2>\n          </div>\n        </div>\n        {orders.map(order => (\n          <StatsSuspense classes=\"col-6 col-xl-3\" key={order.name}>\n            <Stats\n              value={dashboard[order.name]}\n              heading={order.heading}\n              icon=\"box\"\n            />\n          </StatsSuspense>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(Administration);\n","/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/Dashboard/OrderGraphByMonths.tsx",[],"/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/Dashboard/GraphByMonths.tsx",[],"/Users/harisbeslic/Desktop/diplomski/packages/frontend/src/containers/Dashboard/GraphByMonth.tsx",[],{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","severity":2,"message":"229","line":7,"column":8,"nodeType":"230","endLine":7,"endColumn":25,"fix":"231"},{"ruleId":"232","severity":2,"message":"233","line":61,"column":3,"nodeType":"234","messageId":"235","fix":"236"},{"ruleId":"237","severity":2,"message":"238","line":1,"column":19,"nodeType":"230","endLine":1,"endColumn":26,"fix":"239"},{"ruleId":"237","severity":2,"message":"238","line":13,"column":27,"nodeType":"230","endLine":13,"endColumn":34},{"ruleId":"240","severity":2,"message":"241","line":118,"column":21,"nodeType":"242","endLine":124,"endColumn":30},{"ruleId":"243","severity":2,"message":"244","line":122,"column":23,"nodeType":"245","endLine":122,"endColumn":51,"fix":"246"},{"ruleId":"240","severity":2,"message":"241","line":127,"column":21,"nodeType":"242","endLine":133,"endColumn":30},{"ruleId":"243","severity":2,"message":"244","line":131,"column":23,"nodeType":"245","endLine":131,"endColumn":60,"fix":"247"},{"ruleId":"240","severity":2,"message":"241","line":136,"column":21,"nodeType":"242","endLine":142,"endColumn":30},{"ruleId":"243","severity":2,"message":"244","line":140,"column":23,"nodeType":"245","endLine":140,"endColumn":51,"fix":"248"},{"ruleId":"240","severity":2,"message":"241","line":146,"column":21,"nodeType":"242","endLine":152,"endColumn":30},{"ruleId":"243","severity":2,"message":"244","line":150,"column":23,"nodeType":"245","endLine":150,"endColumn":58,"fix":"249"},{"ruleId":"250","severity":2,"message":"251","line":59,"column":35,"nodeType":"252","messageId":"253","endLine":59,"endColumn":58,"fix":"254"},{"ruleId":"255","severity":2,"message":"256","line":63,"column":34,"nodeType":"252","endLine":63,"endColumn":48},{"ruleId":"255","severity":2,"message":"256","line":68,"column":34,"nodeType":"252","endLine":68,"endColumn":56},{"ruleId":"250","severity":2,"message":"251","line":68,"column":34,"nodeType":"252","messageId":"253","endLine":68,"endColumn":56,"fix":"257"},{"ruleId":"255","severity":2,"message":"256","line":75,"column":34,"nodeType":"252","endLine":75,"endColumn":56},{"ruleId":"250","severity":2,"message":"251","line":75,"column":34,"nodeType":"252","messageId":"253","endLine":75,"endColumn":56,"fix":"258"},{"ruleId":"255","severity":2,"message":"256","line":82,"column":34,"nodeType":"252","endLine":82,"endColumn":56},{"ruleId":"250","severity":2,"message":"251","line":82,"column":34,"nodeType":"252","messageId":"253","endLine":82,"endColumn":56,"fix":"259"},{"ruleId":"255","severity":2,"message":"256","line":89,"column":34,"nodeType":"252","endLine":89,"endColumn":56},{"ruleId":"250","severity":2,"message":"251","line":89,"column":34,"nodeType":"252","messageId":"253","endLine":89,"endColumn":56,"fix":"260"},{"ruleId":"250","severity":2,"message":"251","line":117,"column":35,"nodeType":"252","messageId":"253","endLine":117,"endColumn":58,"fix":"261"},{"ruleId":"255","severity":2,"message":"256","line":121,"column":34,"nodeType":"252","endLine":121,"endColumn":58},{"ruleId":"250","severity":2,"message":"251","line":121,"column":34,"nodeType":"252","messageId":"253","endLine":121,"endColumn":58,"fix":"262"},{"ruleId":"255","severity":2,"message":"256","line":128,"column":34,"nodeType":"252","endLine":128,"endColumn":54},{"ruleId":"250","severity":2,"message":"251","line":128,"column":34,"nodeType":"252","messageId":"253","endLine":128,"endColumn":54,"fix":"263"},{"ruleId":"255","severity":2,"message":"256","line":135,"column":34,"nodeType":"252","endLine":135,"endColumn":54},{"ruleId":"250","severity":2,"message":"251","line":135,"column":34,"nodeType":"252","messageId":"253","endLine":135,"endColumn":54,"fix":"264"},{"ruleId":"255","severity":2,"message":"256","line":142,"column":34,"nodeType":"252","endLine":142,"endColumn":54},{"ruleId":"250","severity":2,"message":"251","line":142,"column":34,"nodeType":"252","messageId":"253","endLine":142,"endColumn":54,"fix":"265"},{"ruleId":"255","severity":2,"message":"256","line":149,"column":34,"nodeType":"252","endLine":149,"endColumn":54},{"ruleId":"250","severity":2,"message":"251","line":149,"column":34,"nodeType":"252","messageId":"253","endLine":149,"endColumn":54,"fix":"266"},{"ruleId":"255","severity":2,"message":"256","line":164,"column":36,"nodeType":"252","endLine":164,"endColumn":49},{"ruleId":"250","severity":2,"message":"251","line":164,"column":36,"nodeType":"252","messageId":"253","endLine":164,"endColumn":49,"fix":"267"},{"ruleId":"250","severity":2,"message":"251","line":175,"column":35,"nodeType":"252","messageId":"253","endLine":175,"endColumn":63,"fix":"268"},{"ruleId":"269","severity":2,"message":"270","line":183,"column":36,"nodeType":"230","messageId":"271","endLine":183,"endColumn":44,"fix":"272"},{"ruleId":"269","severity":2,"message":"273","line":187,"column":36,"nodeType":"230","messageId":"271","endLine":187,"endColumn":50,"fix":"274"},{"ruleId":"269","severity":2,"message":"275","line":191,"column":36,"nodeType":"230","messageId":"271","endLine":191,"endColumn":51,"fix":"276"},{"ruleId":"269","severity":2,"message":"277","line":195,"column":36,"nodeType":"230","messageId":"271","endLine":195,"endColumn":52,"fix":"278"},{"ruleId":"237","severity":2,"message":"238","line":1,"column":51,"nodeType":"230","endLine":1,"endColumn":58,"fix":"279"},{"ruleId":"237","severity":2,"message":"238","line":20,"column":26,"nodeType":"230","endLine":20,"endColumn":33},{"ruleId":"232","severity":2,"message":"233","line":78,"column":3,"nodeType":"234","messageId":"235","fix":"280"},{"ruleId":"281","severity":2,"message":"282","line":127,"column":15,"nodeType":"245","endLine":127,"endColumn":22},{"ruleId":"281","severity":2,"message":"282","line":142,"column":15,"nodeType":"245","endLine":142,"endColumn":22},{"ruleId":"283","severity":2,"message":"284","line":163,"column":24,"nodeType":"285","endLine":163,"endColumn":33,"fix":"286"},{"ruleId":"287","severity":2,"message":"288","line":172,"column":27,"nodeType":"289","messageId":"290","endLine":172,"endColumn":58,"fix":"291"},{"ruleId":"292","severity":2,"message":"293","line":99,"column":33,"nodeType":"294","messageId":"295","endLine":99,"endColumn":48},{"ruleId":"240","severity":2,"message":"241","line":282,"column":15,"nodeType":"242","endLine":288,"endColumn":24},{"ruleId":"232","severity":2,"message":"233","line":24,"column":3,"nodeType":"234","messageId":"235","fix":"296"},{"ruleId":"237","severity":2,"message":"238","line":3,"column":27,"nodeType":"230","endLine":3,"endColumn":34,"fix":"297"},{"ruleId":"237","severity":2,"message":"238","line":9,"column":27,"nodeType":"230","endLine":9,"endColumn":34},{"ruleId":"232","severity":2,"message":"233","line":40,"column":3,"nodeType":"234","messageId":"235","fix":"298"},{"ruleId":"283","severity":2,"message":"284","line":105,"column":28,"nodeType":"285","endLine":105,"endColumn":37,"fix":"299"},{"ruleId":"240","severity":2,"message":"241","line":32,"column":5,"nodeType":"242","endLine":42,"endColumn":14},{"ruleId":"250","severity":2,"message":"251","line":40,"column":22,"nodeType":"252","messageId":"253","endLine":40,"endColumn":49,"fix":"300"},{"ruleId":"301","severity":2,"message":"302","line":100,"column":5,"nodeType":"303","messageId":"304","endLine":100,"endColumn":39},{"ruleId":"305","severity":1,"message":"306","line":17,"column":3,"nodeType":"307","messageId":"308","endLine":17,"endColumn":14},{"ruleId":"281","severity":2,"message":"282","line":46,"column":7,"nodeType":"245","endLine":46,"endColumn":45},{"ruleId":"250","severity":2,"message":"251","line":28,"column":22,"nodeType":"252","messageId":"253","endLine":28,"endColumn":49,"fix":"309"},{"ruleId":"281","severity":2,"message":"282","line":14,"column":5,"nodeType":"245","endLine":14,"endColumn":32},{"ruleId":"281","severity":2,"message":"282","line":15,"column":5,"nodeType":"245","endLine":15,"endColumn":60},{"ruleId":"250","severity":2,"message":"251","line":15,"column":23,"nodeType":"252","messageId":"253","endLine":15,"endColumn":58,"fix":"310"},{"ruleId":"250","severity":2,"message":"251","line":28,"column":22,"nodeType":"252","messageId":"253","endLine":28,"endColumn":49,"fix":"311"},"no-native-reassign",["312"],"no-negated-in-lhs",["313"],"jsx-a11y/accessible-emoji",[],"lines-around-directive",["314"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"import/no-useless-path-segments","Useless path segments for \"./../types/user\", should be \"../types/user\"","Literal",{"range":"315","text":"316"},"curly","Expected { after 'if' condition.","IfStatement","missingCurlyAfterCondition",{"range":"317","text":"318"},"import/no-duplicates","'/Users/harisbeslic/Desktop/diplomski/node_modules/react/index.js' imported multiple times.",{"range":"319","text":"320"},"react/button-has-type","Missing an explicit type attribute for button","JSXElement","react/self-closing-comp","Empty components are self-closing","JSXOpeningElement",{"range":"321","text":"322"},{"range":"323","text":"322"},{"range":"324","text":"322"},{"range":"325","text":"322"},"prefer-template","Unexpected string concatenation.","BinaryExpression","unexpectedStringConcatenation",{"range":"326","text":"327"},"react/no-array-index-key","Do not use Array index in keys",{"range":"328","text":"329"},{"range":"330","text":"331"},{"range":"332","text":"333"},{"range":"334","text":"335"},{"range":"336","text":"327"},{"range":"337","text":"338"},{"range":"339","text":"340"},{"range":"341","text":"342"},{"range":"343","text":"344"},{"range":"345","text":"346"},{"range":"347","text":"348"},{"range":"349","text":"350"},"dot-notation","[\"upTo25\"] is better written in dot notation.","useDot",{"range":"351","text":"352"},"[\"from25upTo50\"] is better written in dot notation.",{"range":"353","text":"354"},"[\"from50upTo100\"] is better written in dot notation.",{"range":"355","text":"356"},"[\"from100upTo150\"] is better written in dot notation.",{"range":"357","text":"358"},{"range":"359","text":"360"},{"range":"361","text":"362"},"jsx-a11y/label-has-associated-control","A form label must be associated with a control.","react/jsx-curly-brace-presence","Curly braces are unnecessary here.","JSXExpressionContainer",{"range":"363","text":"364"},"no-unneeded-ternary","Unnecessary use of boolean literals in conditional expression.","ConditionalExpression","unnecessaryConditionalExpression",{"range":"365","text":"366"},"radix","Missing radix parameter.","CallExpression","missingRadix",{"range":"367","text":"318"},{"range":"368","text":"369"},{"range":"370","text":"371"},{"range":"372","text":"364"},{"range":"373","text":"374"},"consistent-return","Arrow function expected no return value.","ReturnStatement","unexpectedReturnValue","no-console","Unexpected console statement.","MemberExpression","unexpected",{"range":"375","text":"374"},{"range":"376","text":"377"},{"range":"378","text":"374"},"no-global-assign","no-unsafe-negation","padding-line-between-statements",[84,101],"\"../types/user\"",[1631,1713],"{return (\n      <div className=\"card-body\">\n        <Spinner />\n      </div>\n    );}",[12,553],", { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { createSelector } from 'reselect';\nimport { AppState } from '@reducers/index';\nimport { useSelector } from 'react-redux';\nimport RightPart from './RightPart';\nimport { restUserResponse, resetProfileErrors } from '@actions';\nimport { useThunkDispatch } from '@dispatch';\nimport Alert from '@components/UI/Alert';\nimport PhotoUpload from './Photo';\nimport ProfileForm from './Form';\nimport DisabledInput from '@components/UI/Input/DisabledInput';\n",[3584,3589]," />",[3976,3981],[4380,4385],[4854,4859],[1984,2007],"`${classes.table  } mt-3`",[2363,2385],"`priceblackwhite0${  i}`",[2650,2672],"`priceblackwhite1${  i}`",[2944,2966],"`priceblackwhite2${  i}`",[3239,3261],"`priceblackwhite3${  i}`",[4135,4158],[4303,4327],"`${paper.name + i  }color`",[4576,4596],"`colorPrinting0${  i}`",[4856,4876],"`colorPrinting1${  i}`",[5143,5163],"`colorPrinting2${  i}`",[5431,5451],"`colorPrinting3${  i}`",[5955,5968],"`heading${  i}`",[6317,6345],"`${classes.table  } mt-3 mb-3`",[6601,6611],".upTo25",[6751,6767],".from25upTo50",[6908,6925],".from50upTo100",[7067,7085],".from100upTo150",[43,736],", useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport DisabledInput from '@components/UI/Input/DisabledInput';\nimport ToggleSwitchButton from '@components/UI/Buttons';\nimport Spinner from '@components/UI/Spinner/Spinner';\nimport Select from '@components/UI/Select';\nimport { useParams } from 'react-router';\nimport {\n  getUserToEdit,\n  setUserToEdit,\n  restUserResponse,\n  changeUserRole,\n  changeUserBlockStatus,\n} from '@actions';\nimport { createSelector } from 'reselect';\nimport { AppState } from '@reducers/index';\nimport { useSelector } from 'react-redux';\nimport { useThunkDispatch } from '@dispatch';\nimport { inputs } from './disabledInputs';\n",[2311,2511],"{return (\n      <div className=\"card min-height-75vh\">\n        <div className=\"card-body\">\n          {!message && <Spinner />}\n          {message && <p>{message}</p>}\n        </div>\n      </div>\n    );}",[4994,5003],"\"roles\"",[5300,5331],"role !== 'admin'",[694,776],[109,388],", useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { Helmet } from 'react-helmet';\nimport UserDataTable from '@components/DataTables/User';\nimport { getUsers, setUsers } from '@actions';\n",[1234,1543],"{return (\n      <div className=\"row\">\n        <div className=\"col-12 card min-height-75vh \">\n          <div className=\"card-header\">\n            <h2 className=\"title\">{title}</h2>\n          </div>\n          <div className=\"card-body\">\n            <Spinner />\n          </div>\n        </div>\n      </div>\n    );}",[3122,3131],[1156,1183],"`${dashboard[row.name]  } KM`",[905,932],[378,413],"`${classes.toggleCheck  } text-white`",[914,941]]